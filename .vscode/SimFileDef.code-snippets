{
	// Place your IndustrialistFacSim workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	"SimFileDef": {
		"prefix": ["import { AbstractMachine }", "let sim"],
		"body": ["import { AbstractMachine } from \"../../../BaseDefinitions/AbstractDefs/AbstractMachineDef.mjs\";",
		"import { RecipeSimulator } from \"../../../BaseDefinitions/AbstractDefs/RecipeSimulator.mjs\";",
		"import { AdvSimRecipe } from \"../../../BaseDefinitions/HandlerClasses/RecipeHandlers/AdvancedRecipeDef.mjs\";",
		"\t",
		
		"let ${1:RecipeName} = new AdvSimRecipe([[\"${2:RecipeInput}\", ${3:InputAmount}]], [[\"${4:RecipeOutput}\", ${5:OutputAmount}]], ${6:CycleTime}, \"second\", [${7:Powerdraw}, \"${8:Unit}\", 1, \"second\"])",
		"\t",
		
		"let $TM_FILENAME_BASE = new AbstractMachine(${9:Cost}, ${10:Length}, ${11:Width}, [${12:PowerStorage}, \"${13:Unit}\"], [${14:Pollution}, \"${15:Unit}\"])",
		"\t",
		
		"export let ${TM_FILENAME_BASE}Sim = new RecipeSimulator($TM_FILENAME_BASE, ${1:RecipeName})"]
	}
}